# -*- coding: utf-8 -*-
# -----------------------------------------------------------------------------
# Copyright 2015-2021 by ExopyHqcLegacy Authors, see AUTHORS for more details.
#
# Distributed under the terms of the BSD license.
#
# The full license is in the file LICENCE, distributed with this software.
# -----------------------------------------------------------------------------
"""Views for the microwave sources related tasks.

"""
from enaml.core.api import Conditional
from enaml.widgets.api import (GroupBox, Label, Field, ObjectCombo, CheckBox)
from enaml.stdlib.fields import FloatField
from enaml.layout.api import factory

from textwrap import fill

from exopy.tasks.api import InstrTaskView, EVALUATER_TOOLTIP
from exopy.utils.widgets.qt_completers import QtLineCompleter
from exopy_hqc_legacy.utils.layouts import auto_grid_layout
from ...base_instr_view import InstrView




enamldef SetOutputFilterView(InstrView): view:
    """View for the SetOutputFilterView

    """
    #: Attribute set by the parent view if the task is embedded inside a
    #: LoopTask
    attr in_loop : bool = False

    constraints = [factory(auto_grid_layout)]


    Conditional:
        condition << not in_loop
        Label:
            text = 'Output filter'
        ObjectCombo:
            items << list(['DC','MEDIUM','HIGH'])
            selected := task.filter_state


enamldef SetOutputRangeView(InstrView): view:
    """View for the SetOutputRangeView

    """
    #: Attribute set by the parent view if the task is embedded inside a
    #: LoopTask
    attr in_loop : bool = False

    constraints = [factory(auto_grid_layout)]


    Conditional:
        condition << not in_loop
        Label:
            text = 'Output Range'
        ObjectCombo:
            items << list(['LOW','HIGH'])
            selected := task.desired_range

enamldef SendListAndInitView(InstrView): view:
    """View for the SetOutputRangeView

    """
    #: Attribute set by the parent view if the task is embedded inside a
    #: LoopTask
    attr in_loop : bool = False

    constraints = [factory(auto_grid_layout)]


    Conditional:
        condition << not in_loop
        Label:
            text = 'Output Range'
        ObjectCombo:
            items << list(['EXT1','EXT2', 'EXT3','IMM'])
            selected := task.trigger_source

    Conditional:
        condition << not in_loop
        Label:
            text = 'Voltage list (V)'
        QtLineCompleter:
            hug_width = 'ignore'
            text := task.voltage_list
            entries_updater << task.list_accessible_database_entries
            tool_tip = EVALUATER_TOOLTIP